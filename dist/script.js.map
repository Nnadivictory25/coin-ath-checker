{"version":3,"sources":["script.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_this","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","overlay","document","querySelector","modal","searchForm","searchInput","unitsValueForm","unitsInput","searchBtn","loadingImg","coinsContainer","errorMsgElement","walletBalance","emptyMessage","coinQuery","unitValue","imgUrl","coinName","closeModal","classList","add","openModal","remove","resetBtn","textContent","addEventListener","_ref","_callee","e","_context","preventDefault","style","height","fetch","Request","headers","Headers","body","JSON","stringify","currency","code","concat","meta","res","json","console","log","coin","png64","split","map","join","innerHTML","allTimeHighUSD","toFixed","setTimeout","_x","updateUnit","toLocaleString","addCoin","coinAth","units","img"],"mappings":"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","file":"script.js","sourcesContent":["const overlay = document.querySelector(\".overlay\");\r\nconst modal = document.querySelector(\".modal\");\r\nconst searchForm = document.querySelector(\"#searchForm\");\r\nconst searchInput = document.querySelector(\"#searchInput\");\r\nconst unitsValueForm = document.querySelector(\"#coinUnitsForm\");\r\nconst unitsInput = document.querySelector(\"#coinsUnits\");\r\nconst searchBtn = document.querySelector(\"#searchBtn\");\r\nconst loadingImg = document.querySelector(\"#loaderImg\");\r\nconst coinsContainer = document.querySelector(\".coinsCtn\");\r\nconst errorMsgElement = document.querySelector('.errorMessage')\r\nconst walletBalance = document.querySelector('.walletBalance')\r\nconst emptyMessage = document.querySelector('.emptyMessage')\r\n\r\nlet coinQuery = \"\";\r\nlet unitValue = 0\r\nlet imgUrl = ''\r\nlet coinName = ''\r\n\r\n\r\nlet closeModal = () => {\r\n    overlay.classList.add('vh')\r\n    modal.classList.add('vh')\r\n}\r\n\r\nlet openModal = () => {\r\n    overlay.classList.remove('vh')\r\n    modal.classList.remove('vh')\r\n}\r\n\r\nlet resetBtn = () => {\r\n    searchBtn.textContent = \"Search\";\r\n    loadingImg.classList.add(\"dn\");\r\n    searchInput.value = ''\r\n}\r\n\r\nsearchForm.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n\r\n  searchBtn.textContent = \"\";\r\n  searchBtn.style.height = \"49px\";\r\n  loadingImg.classList.remove(\"dn\");\r\n\r\n  coinQuery = searchInput.value;\r\n\r\n  await fetch(new Request(\"https://api.livecoinwatch.com/coins/single\"), {\r\n    method: \"POST\",\r\n    headers: new Headers({\r\n      \"content-type\": \"application/json\",\r\n      \"x-api-key\": \"2bf30367-3679-4c7e-b46b-05aa8c3ed935\",\r\n    }),\r\n    body: JSON.stringify({\r\n      currency: \"USD\",\r\n      code: `${coinQuery}`,\r\n      meta: true,\r\n    }),\r\n  }).then((res) => res.json())\r\n      .then((json) => {\r\n          \r\n        \r\n          console.log(json);\r\n          const coin = json\r\n          openModal()\r\n          imgUrl = coin.png64\r\n          coinName = coin.name\r\n          if (coinName.split(' ').length > 2) {\r\n             coinName = coinName.split(' ').map((name) => name[0]).join('')\r\n          }\r\n          modal.innerHTML = `\r\n          <div class=\"coin_info flex justify-between items-center px-6 pb-2 border-b-2 border-indigo-500\">\r\n          <img class=\"w-16 rounded-full\" src=${coin.png64} alt=\"\">\r\n          <p class=\"coinName font-bold text-2xl uppercase\">${coinName}</p>\r\n          <div class=\"priceCtn flex flex-col text-center\">\r\n              <p class=\"font-bold text-slate-300\">ATH</p>\r\n              <p class=\"ath font-bold text-lg\">$${(coin.allTimeHighUSD).toFixed(3)}</p>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"info px-8 flex gap-x-3 mt-2\">\r\n          <i class=\"bi bi-info-circle\"></i>\r\n          <p class=\"text-xs\">Input how many ${coinName} you have below , then click 'add to wallet' to calculate the value of your holding when it goes back to all time high</p>\r\n      </div>\r\n\r\n      <div  id=\"coinUnitsForm\" class=\"px-5 mt-8\">\r\n          <p class=\"text-lg font-semibold py-3\">How many ${coinName} do you have ?</p>\r\n          <input oninput=\"updateUnit(this.value)\" id=\"coinsUnits\" class=\"w-full p-3 rounded-md mb-5 text-black\"  placeholder=\"Enter coin quantity, eg '10,500'\" required type=\"text\">\r\n          <p class=\"unitvalueErrMsg text-red-600 py-2\"></p>\r\n          <button onclick=\"addCoin(${(coin.allTimeHighUSD).toFixed(3)})\" class=\"w-full rounded-md px-1 py-3 font-bold \" type=\"submit\">Add to wallet</button>\r\n      </div>\r\n\r\n          `\r\n          console.log(unitValue);\r\n      })\r\n      .catch(error => {\r\n          errorMsgElement.textContent = 'Something went wrong, try searching for another coin or try again later'\r\n          closeModal()\r\n          resetBtn()\r\n\r\n          setTimeout(() => {\r\n            errorMsgElement.textContent = ''\r\n          }, 4000)\r\n    });\r\n});\r\n\r\nlet updateUnit = (value) => {\r\n    this.value = this.value.toLocaleString('en-US')\r\n    unitValue = +value\r\n    console.log(unitValue);\r\n}\r\n\r\n\r\nlet addCoin = (coinAth, units = unitValue, img = imgUrl) => {\r\n    if (unitValue > 0) {\r\n        closeModal()\r\n        emptyMessage.remove()\r\n        resetBtn()\r\n    \r\n        const value = (coinAth * units).toLocaleString('en-US', { style: 'currency', currency: 'USD' })\r\n        console.log(coinAth, units);\r\n        coinsContainer.innerHTML += `\r\n    \r\n        <div class=\"coinCtn w-full mt-7 flex justify-between items-center p-3 lg:py-4 lg:px-5\">\r\n            <div class=\"imgCtn flex flex-col justify-center items-center my-auto\">\r\n                <img class=\"w-16 rounded-full\" src=${img} alt=\"...\">\r\n                <p class=\"coinName font-semibold py-1\">${coinName}</p>\r\n          </div>\r\n            <div class=\"priceCtn flex flex-col text-center\">\r\n                <p class=\"font-bold text-slate-300\">Quantity</p>\r\n                <p class=\"ath font-bold text-lg\">${units}</p>\r\n            </div>\r\n            <div class=\"priceCtn flex flex-col text-center\">\r\n                <p class=\"font-bold text-slate-300\">Value(ATH)</p>\r\n                <p class=\"ath font-bold text-lg\">${value}</p>\r\n            </div>\r\n        </div>\r\n        `\r\n    }\r\n    \r\n}"]}